name: Release
on:
  push:
    tags:
      - v*.*.*

jobs:
  image:
    name: docker image
    runs-on: Ubuntu-20.04
    environment: docker
    env:
      APP: sweeprs
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ilmannafian
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Parse semver string
        id: semver_parser 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'
      - name: Build and push tags
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          cache-from: ilmannafian/${{ env.APP }}:latest
          tags: |
            ilmannafian/${{ env.APP }}:latest
            ilmannafian/${{ env.APP }}:${{ steps.semver_parser.outputs.major }}
            ilmannafian/${{ env.APP }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
            ilmannafian/${{ env.APP }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
  build:
    name: binary
    runs-on: Ubuntu-20.04
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            bin: sweeprs
          - target: x86_64-pc-windows-gnu
            bin: sweeprs.exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo
      - name: setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: install windows target dependencies
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: sudo apt install mingw-w64
      - name: compile source
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p cli --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: ./target/${{ matrix.target }}/release/${{ matrix.bin }}
  release:
    name: release to gh and cratess
    runs-on: Ubuntu-20.04
    needs: build
    environment: prod
    steps:
      - uses: actions/download-artifact@v2
      - name: create github release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./x86_64-unknown-linux-gnu/sweeprs
            ./x86_64-pc-windows-gnu/sweeprs.exe
      - name: setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_IO_TOKEN }}
      - name: publish crates
        uses: actions-rs/cargo@v1
        with:
          command: publish
